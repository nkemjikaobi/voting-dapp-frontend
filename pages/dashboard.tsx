import React from 'react';
import type { NextPage } from 'next';
import Head from 'next/head';
import toast, { Toaster } from 'react-hot-toast';
import VotingContext from 'context/voting/VotingContext';
import { useContext, useEffect } from 'react';
import { useRouter } from 'next/router';
import Link from 'next/link';
import VoterCard from 'components/VoterCard';

const DashboardPage: NextPage = () => {
	const votingContext = useContext(VotingContext);

	const {
		connectWallet,
		message,
		error,
		clearMessage,
		clearError,
		balance,
		address,
		web3Modal,
		disconnectWallet,
	} = votingContext;
	const router = useRouter();

	const reconnectWallet = async () => {
		await connectWallet(router);
	};

	//Reconnect wallet on page refresh
	useEffect(() => {
		let mounted = true;

		if (mounted && localStorage?.getItem('isWalletConnected') === 'true') {
			reconnectWallet();
		}
		return () => {
			mounted = false;
		};
		//eslint-disable-next-line
	}, []);

	//Handle Messages
	useEffect(() => {
		let mounted = true;

		if (mounted && message !== null) {
			toast.success(message);
			setTimeout(() => clearMessage(), 3000);
		}
		return () => {
			mounted = false;
		};
		//eslint-disable-next-line
	}, [message]);

	//Handle Errors
	useEffect(() => {
		let mounted = true;

		if (mounted && error !== null) {
			toast.error(error);
			setTimeout(() => clearError(), 3000);
		}
		return () => {
			mounted = false;
		};
		//eslint-disable-next-line
	}, [error]);
	return (
		<div>
			<Head>
				<title>Dashboard</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<Toaster position='top-right' />
			<main className='container mx-auto'>
				<div className='mt-8'>
					<nav className=' flex justify-between items-center'>
						<Link href='/'>
							<a href='#' className='text-2xl font-bold'>
								Voting Dapp
							</a>
						</Link>
						<div className='flex'>
							<button
								onClick={() => connectWallet(router)}
								className='bg-[#4B60B0] mr-4 flex items-center justify-center text-white rounded-md uppercase px-5 py-3 hover:bg-slate-900'
							>
								{balance} ETH |{' '}
								{address && (
									<span className='ml-2 text-purple-300'>{`${address.slice(
										0,
										3
									)}...${address.slice(-3)}`}</span>
								)}
							</button>
							<button
								onClick={() => disconnectWallet(web3Modal, router)}
								className='bg-[#4B60B0] flex items-center justify-center text-white rounded-md uppercase px-5 py-3 hover:bg-slate-900'
							>
								disconnect
							</button>
						</div>
					</nav>
					<div className=' mt-8 grid grid-cols-1 md:grid-cols-3 gap-4'>
						<VoterCard />
						<VoterCard />
						<VoterCard />
						<VoterCard />
						<VoterCard />
						<VoterCard />
					</div>
				</div>
			</main>
		</div>
	);
};

export default DashboardPage;
